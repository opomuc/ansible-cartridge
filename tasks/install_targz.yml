---
- name: Unpack a package
  unarchive:
    creates: "{{ apps_dir }}/{{ cartridge_app_name }}"
    src: "{{ cartridge_package_path }}"
    dest: "{{ apps_dir }}"
    keep_newer: true
  any_errors_fatal: true

- name: Create a symlink to the package folder
  file:
    src: "{{ apps_dir }}/{{ cartridge_app_name }}"
    dest: "{{ bin_dir }}"
    state: link
    force: true
  any_errors_fatal: true

- name: Create an app@.service file
  template:
    src: app@.service.j2
    dest: "{{ systemd_dir }}/{{ instance_systemd_unit_file }}"
  any_errors_fatal: true

- name: Configure stateboard
  block:
    - name: Set stateboard facts
      set_fact:
        stateboard_name: '{{ cartridge_app_name }}-stateboard'

    - name: Create a stateboard service file
      template:
        src: stateboard.service.j2
        dest: "{{ systemd_dir }}/{{ stateboard_name }}.service"
      any_errors_fatal: true
  tags: always
  when: stateboard_on_machine == true

- name: Create a unit file
  vars:
    programs: '{{ hostvars.values() | list | get_instances_on_machine(ansible_host) }}'
  template:
    src: supervisor.unit.j2
    dest: "{{ supervisor_unit_dir }}/{{ cartridge_app_name }}.conf"
    owner: "{{ instance_user }}"
    group: "{{ instance_group }}"
  any_errors_fatal: true
  tags:
    - never
    - supervisor
  notify:
    - reload-supervisor-daemon

- name: Notifications
  block:
    - name: Notify systemd daemon
      command: /bin/true
      when: "'supervisor' not in ansible_run_tags"
      notify:
        - reload-systemd-daemon

    - name: Notify supervisord daemon
      command: /bin/true
      when: "'supervisor' in ansible_run_tags"
      notify:
        - reload-supervisor-daemon
  tags: always
