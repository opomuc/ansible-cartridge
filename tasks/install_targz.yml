---
- name: Create instance group
  group:
    name: "{{ instance_group }}"

- name: Create instance user and add to group
  user:
    name: "{{ instance_user }}"
    groups: "{{ instance_group }}"
    append: yes

- name: Create a package directory
  file:
    path: "{{ apps_dir }}"
    state: directory
  any_errors_fatal: true

- name: Unpack a package
  unarchive:
    creates: "{{ apps_dir }}/{{ cartridge_app_name }}"
    src: "{{ cartridge_package_path }}"
    dest: "{{ apps_dir }}"
    keep_newer: true
  any_errors_fatal: true

- name: Create a symlink to the package folder
  file:
    src: "{{ apps_dir }}/{{ cartridge_app_name }}"
    dest: "{{ bin_dir }}"
    state: link
    force: true
  any_errors_fatal: true

# - name: Create an app@.service file
#   template:
#     src: app@.service.j2
#     dest: "{{ instance_systemd_path }}{{ instance_systemd_unit_file }}"
#   any_errors_fatal: true

- vars:
    programs: '{{ hostvars.values() | list }}'
  debug:
    msg: "{{ lookup('template', 'supervisor.unit.j2') }}"

- name: Create an unit file
  vars:
    programs: '{{ hostvars.values() | list | get_instances_on_machine(ansible_host) }}'
  template:
    src: supervisor.unit.j2
    dest: "/etc/supervisord.d/{{ cartridge_app_name }}.ini"
    owner: root
    group: root
  any_errors_fatal: true
  # run_once: true
  notify:
    - reload-supervisor-daemon

# - name: Copy an unit-file to /etc/systemd/system/
#   become: true
#   copy:
#     remote_src: true
#     src: "{{ instance_systemd_path }}{{ instance_systemd_unit_file }}"
#     dest: "/etc/systemd/system/{{ instance_systemd_unit_file }}"
#     owner: root
#     group: root
#   any_errors_fatal: true
#   notify:
#     - reload-systemd-daemon
