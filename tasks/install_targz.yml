---
- name: Download package
  get_url:
    url: "{{ cartridge_package_path }}"
    dest: "{{ tmp_dir }}/{{ cartridge_app_name }}.tar.gz"
    timeout: "{{ artifact_download_timeout | default(300) }}"
  when: cartridge_package_path is match('http[s]*://.*')

- name: Unpack a package (remote)
  unarchive:
    src: "{{ tmp_dir }}/{{ cartridge_app_name }}.tar.gz"
    dest: "{{ tmp_dir }}/{{ app_version }}"
    keep_newer: true
    remote_src: true
  any_errors_fatal: true
  when: cartridge_package_path is match('http[s]*://.*')

- name: Unpack a package (local)
  unarchive:
    src: "{{ cartridge_package_path }}"
    dest: "{{ tmp_dir }}/{{ app_version }}"
    keep_newer: true
  any_errors_fatal: true
  when: cartridge_package_path is not match('http[s]*://.*')

- name: Copy application to release directory
  copy:
    src: "{{ tmp_dir }}/{{ app_version }}/{{ cartridge_app_name }}/"
    dest: "{{ release_dir }}/{{ app_version }}"
    remote_src: true

- name: Clean tmp directory
  file:
    dest: "{{ tmp_dir }}"
    state: absent

- name: Change file permissions on Tarantool binary
  file:
    path: "{{ release_dir }}/{{ app_version }}/tarantool"
    mode: a+x

- name: Create an app@.service file
  template:
    src: app@.service.j2
    dest: "{{ systemd_dir }}/{{ instance_systemd_unit_file }}"
  any_errors_fatal: true
  when: "'supervisor' not in ansible_run_tags"

- name: Create a stateboard service file
  template:
    src: stateboard.service.j2
    dest: "{{ systemd_dir }}/{{ stateboard_name }}.service"
  any_errors_fatal: true
  tags: always
  when: >-
    'supervisor' not in ansible_run_tags and
    stateboard_on_machine == true

- name: Create a unit file
  vars:
    programs: '{{ hostvars.values() | list | get_instances_on_machine(ansible_host) }}'
  template:
    src: supervisor.unit.j2
    dest: "{{ supervisor_unit_dir }}/{{ cartridge_app_name }}.conf"
    # owner: "{{ instance_user }}"
    # group: "{{ instance_group }}"
  any_errors_fatal: true
  tags:
    - never
    - supervisor
  notify:
    - reload-supervisor-daemon

- name: Notifications
  block:
    - name: Notify systemd daemon
      command: /bin/true
      when: "'supervisor' not in ansible_run_tags"
      notify:
        - reload-systemd-daemon

    - name: Notify supervisord daemon
      command: /bin/true
      when: "'supervisor' in ansible_run_tags"
      notify:
        - reload-supervisor-daemon
  tags: always
